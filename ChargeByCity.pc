//ChargesByCity.pc
//This is a Pro-C/CGI Program that accepts a city name
//from a web page, and then prints all guest charges incurred at that city
//including Guest Name, Hotel Name, Transaction Date, Item ID and Item Name
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
// We have two includes.  One to separate 
// the commands from the web and the second to change 
// back characters that the web replaced with the correct codes
#include "querystringoracle.c"
#include "specialcharacters.c"
// Here is our Pro-C command to pull in the Communications Area
exec sql include sqlca;

int main()
{
	// Here are the variables that will be needed by both the program and Oracle
	exec sql begin declare section;
		VARCHAR sGuestName[101], sTransDate[11], sHotelName[51], sItemName[51];
		int nItemId;
		VARCHAR sInCity[11], sMatchCity[11];
		VARCHAR sUser_ID[21], sPassword[20];
	exec sql end declare section;
	
	// Come extra variables needed by 
	int i;
	int icontentlength;
	char * method, * contentlength;

	exec sql declare dbItems cursor for
		SELECT Last_Name  || ', ' || First_Name, TO_CHAR(Trans_Date,'MM/DD/YYYY') as Trans_Date, Hotel_Name, Item_ID, Item_Name
		FROM Guest, Stay, Charge, Hotel, Sales_Item
		WHERE Guest.Guest_ID = Stay.Guest_ID
		AND   Hotel.Hotel_ID = Stay.Hotel_ID
		AND   Stay.Stay_ID = CHarge.Stay_ID
		AND   Charge.Item_ID = Sales_Item.Item_ID
		AND   Hotel.City like :sMatchCity;


    /* Set Oracle environment variables.  The below function is contained in querystringoracle.c. */
    SetOrclEvars();

	// Set up to connect to the database with the user-id and password
	strcpy(sUser_ID.arr,"lbradle6_guest"); 
	strcpy(sPassword.arr,"oracle"); 
	sUser_ID.len=strlen(sUser_ID.arr);
	sPassword.len=strlen(sPassword.arr);
	exec sql connect :sUser_ID identified by :sPassword;

	// Check to see if the connection worked.  If it did not, send out an error message
	if(sqlca.sqlcode !=0)
	{ 
		printf("Content-type: text/plain\n\n");
		printf("Sorry, cannot connect to server, pgm aborted %d\n,sqlca.sqlcode");
		exit(1);
	}
	
	// Check to see if this was a POST or a GET.  
	// If it was a post, go pull together the query string
	// from the HTML.  It it was just a Get, it will already
	// be ready for us.
	method=getenv("REQUEST_METHOD");
	if (strcmp(method,"POST")==0)
	{
		contentlength=getenv("CONTENT_LENGTH");
		sscanf(contentlength, "%d", &icontentlength);
		glInput=malloc(icontentlength+1);
		for (i=0; i<icontentlength; i++)
		{ glInput[i]=getchar(); }
		glInput[icontentlength]=0;
	}
	else glInput=getenv("QUERY_STRING");
	glLength=strlen(glInput);
	
    //Special function to correct escape characters.  For example, a space
	//is turned into %40
	fixStatement(glInput);

	//Find the City being input in the HTML Query String
	FindStringFor("City", sInCity.arr);
	sInCity.len = strlen(sInCity.arr);

	//Put the City into the sMatchCity variable
 	strcpy(sMatchCity.arr,sInCity.arr); 

	// If the wanted all Cities, we change the Match City so that it is just a wild card.
       if(strcmp(sMatchCity.arr,"ALL")==0)
       {
            strcpy(sMatchCity.arr,"%");
       }
       sMatchCity.len = strlen(sMatchCity.arr);


	/* generate HTML output with selected records in HTML table */
	printf("Content-type: text/html\n\n");
	printf("<html>\n");
	printf("<head>\n");
	printf("<title> Sales Items Purchased in a Specific City</title>\n");
	printf("</head>\n");
	printf("<body>\n");
	printf("<h1> Sales Items Purchased In The City Of %s </h1>\n",sInCity.arr);
	printf("    <table border=\"1\">\n");

	/* output header record for HTML table */
	printf("      <tr>\n");
	printf("        <th> Guest-Name </th>\n");
	printf("        <th> Hotel-Name </th>\n");
	printf("        <th> Trans Date </th>\n");
	printf("        <th> Item-Id </th>\n");
	printf("        <th> Item Name </th>\n");
	printf("      </tr>\n");
	exec sql open dbItems ;
	for(;;){

		exec sql fetch dbItems into :sGuestName, :sHotelName, :sTransDate, :nItemId, :sItemName;
		if(sqlca.sqlcode !=0) break;
		sGuestName.arr[sGuestName.len] = 0;
		sHotelName.arr[sHotelName.len] = 0;
		sTransDate.arr[sTransDate.len] = 0;
		sItemName.arr[sItemName.len] = 0;
		

		printf("<tr>\n");
		printf("<td> %s </td>\n", sGuestName.arr);
		printf("<td> %s </td>\n", sHotelName.arr);
		printf("<td> %s </td>\n", sTransDate.arr);
		printf("<td> %d </td>\n", nItemId);
		printf("<td> %s </td>\n", sItemName.arr);
		printf("</tr>\n");
	}
	exec sql close dbItems ;

	printf("</table>\n");

	/* provide option for returning to form */
	printf("<p>\n");
	printf("  <a href=\n");
	printf(
		"    \"http://dboracle.eng.fau.edu:7777/~lbradle6_guest/ChargesByCity.HTML\">\n");
	printf("     click here to select again\n");
	printf("  </a>\n");
	printf("</p>\n");
	printf("<p>\n");
	printf("  <a href=\n");
	printf(
		"    \"http://dboracle.eng.fau.edu:7777/~lbradle6_guest/SimpleMenu.HTML\">\n");
	printf("     click here to return to Simple Menu\n");
	printf("  </a>\n");
	printf("</p>\n");

	printf("</body>\n");
	printf("</html>\n");

	return 0;

}

